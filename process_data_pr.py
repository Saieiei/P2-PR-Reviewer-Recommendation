#!/usr/bin/env python3
# -*- coding: utf-8 -*-
"""
Refactored process_data_pr.py with enhanced generic-filter logic:
- Optional pure-presence drop via SHORT_MAX_LEN
- Dual-threshold fuzzy matching with token-set ratio for typo-mode
Replace GENERIC_EXAMPLES and optionally SHORT_MAX_LEN as needed.
"""

import json
import random
import re
import os
from typing import List, Tuple, Dict
from tqdm import tqdm
from rapidfuzz import fuzz

# === Configuration ===
DATA_FILE       = "preprocessed_data.json"
OUTPUT_DIR      = "."              # where train.tsv, dev.tsv, test.tsv go
CODESPLIT       = "<CODESPLIT>"    # separator for run_classifier.py
TRAIN_RATIO     = 0.80
DEV_RATIO       = 0.10
SEED            = 42
WINDOW_SIZE     = 200  # tokens per window
OVERLAP         = 50   # tokens overlap between windows
SUGG_OVERSAMPLE = 2    # duplicate suggestion positives

# === Fill your generic comment patterns here ===
# Example:
# GENERIC_EXAMPLES = [
#     "lgtm",
#     "looks good to me",
#     "approved",
#     "thanks",
#     "fixed",
# ]
GENERIC_EXAMPLES: List[str] = [
    "Applied.",
    "Sorry!",
    "Yeah that is probably better. Thanks. I updated the patch.",
    "Use poison",
    "takeName",
    "Side hack, probably shouldn't do this here",
    "```suggestion```Noise",
    "Fixed",
    "I'll post that tomorrow in the hope that the build bots have calmed down by then, since precommit seems to be failing for everyone atm",
    "I think there are two things going on here:",
    "Nit: `m_`?",
    "The main changes are here.",
    "This is the type of typo this can help prevent!",
    "Nice!",
    "Seems like this variant is unnecessary.",
    "nit: What is this needed for?",
    "Delete this line as it's irrelevant to this patch?",
    "Delete both lines?",
    "Thank you for the suggestion; Iâ€™ll take it into consideration.",
    "Braces",
    "also here",
    "Didn't see, thank you",
    "Thanks. I think it's fine either way.",
    "This should have a different text.",
    "I've added some tests with different attributes in different places. If you have any idea what should be added - small example (just code line) would be appreciated.",
    "Thanks, fixed. Now it mention that empty function also merged.",
    "Thanks, fixed",
    "fixed",
    "Pushed a correction. It still passes here locally.",
    "Thank you.",
    "Should we also send notification on Discord?",
    "Maybe on discord, just send a link to the discourse thread? IMHO, it is better to only have to manage one thread.",
    "```suggestion\n}\n\n```",
    "This is kind of worse",
    "whether",
    "Done. Thanks for the finding.",
    "Thank you for the link!",
    "Thank you for the link!\n\nDone.",
    "Agree. Early return is a good idea here.",
    "Done.\n\nIt looks better now.\n\nThank you!",
    "Good idea, done.",
    "Comment",
    "Correct, I forgot to add one. Will add.",
    "`false`?",
    "Ditto.",
    "yes, thanks for the notice",
    "typo: \"sanboxir\"",
    "Fixed.",
    "I've added those tests now.",
    "Ah! I've removed the escape. :-)",
    "Unrelated?",
    "Ok, makes sense. Just pushed something.",
    "ok, done!",
    "Done.",
    "This was the primary goal of this PR.",
    "Oops yes, removed",
    "Okay, I see. I'll amend it.",
    "This does not look obvious to me. Can you explain?",
    "I fixed that / added comments",
    "Can we add some comments? what causes us to change it from 24 -> 32",
    "another typo :)",
    "Thanks for the finding. Done",
    "Thanks for the hint. That makes more sense. Feel free to check the corresponding commits.",
    "Thank you for the explanations. Am I right in assuming that we can leave it as it is for this PR?",
    "I think it's good as-is. Thanks.",
    "oh yes, thanks",
    "fixed in main, thanks",
    "Sounds good! Worth adding a comment explaining that so others don't wonder as well.",
    "Actually, I don't see it anymore.  Good then.",
    "Sounds good! That seems to also be how we do it elsewhere in the codebase",
    "Nit: Update comment above.",
    "Yes, this seems clear.",
    "Updated",
    "Changed to suggestion",
    "Added comment",
    "Added test for upper limit",
    "OK, I'll take into account when implementing next intrinsics.",
    "I tried that fix, and I agree it looks like the right fix to me. It seems to solve the issue.",
    "https://github.com/llvm/llvm-project/pull/133840",
    "```suggestion\n```",
    "Ahh, got it.",
    "yep, changing it now",
    "This looks to be resolve, but not done.",
    "Thanks a lot for the comment!",
    "Done.",
    "done!",
    "also here",
    "(see comment above)",
    "Yes, that will work.",
    "Not really relevant here, and redundant with the final result check",
    "Yea, updated.",
    "same here",
    "You're right. I created https://github.com/llvm/llvm-project/pull/133370",
    "What's all this about?",
    "Oops needed to remove that",
    "Nit: newline",
    "moved it back",
    "remove?",
    "hahah, epic explanation!",
    "Removed",
    "This is already tested in mlir/test/Dialect/LLVMIR/func.mlir",
    "I see. This makes sense. Thanks for clarifying.",
    "unrelated?",
    "unnecessary",
    "remove",
    "unrelated",
    "Done.",
    "Yes, improved. Added more check lines to show that.",
    "Sorry, I'm too spoiled with Python 3.12 on my job :-)",
    "Same here.",
    "Good catch! Will add tomorrow.",
    "ahh, didn't read the full code.",
    "That's great to know!",
    "What's this for?",
    "Good call, that exposed an issue. I'll add test coverage and correct the problem.",
    "Absolutely!",
    "Fair point!",
    "I'm blind!",
    "Sure, added!",
    "Sure",
    "You are right. Fixed in the latest revision.",
    "done, but what's the difference?",
    "or false, whichever.",
    "Ok, yeah that makes sense.",
    "Makes sense, thanks for explaining!",
    "This still worries me.",
    "What do you expect here?",
    "Ok, will do actual cost estimation",
    "Done.",
    "Ok. Thanks for checking.",
    "ditto",
    "Thanks ! I didn't know they could be implicit.",
    "Nope. :-(\nBut now fixed.",
    "correct",
    "This also unintentionally?",
    "Is this left unintentionally?",
    "Good idea.",
    "Removed.",
    "I trimmed most of the comments.",
    "Thanks, will do.",
    "Ohh I see what you mean now. Thanks",
    "I think this could use a comment",
    "Why remove the comment?",
    "(I mailed core)",
    "@zygoloid",
    "Here too perhaps?",
    "They're not, I'll add this as a test case.",
    "I'll add test coverage",
    "Ah, yeah, makes sense",
    "Was this a previous bug?",
    "I have to say that is a choice.",
    "Thank you for the feedback. Will do.",
    "Sure, good call!",
    "Surely you mean 21?",
    "Thank you, I wasn't sure how this work related to releases. I fixed it.",
    "thank you for the review. I have removed extra line.",
    "Thank you for the suggestion! I've added a [comment ](https://github.com/llvm/llvm-project/issues/128656#issuecomment-2753046448) in the issue #128656 to track these TODO tasks.",
    "You are right! Correcting now.",
    "this as well",
    "yes. will do",
    "will remove it",
    "Oh, that's actually not used, I should get rid of it thanks!",
    "https://github.com/llvm/llvm-project/pull/133633",
    "Also here",
    "I agree, I'll revert these changes.",
    "I have kept it as-is if you don't mind.",
    "And this key is new.",
    "I don't think this is necessary.",
    "Sure, I'll do that.",
    "add negative test",
    "Is this supposed to be on 2 lines?",
    "good catch. no this should be one line",
    "Good points, thank you! I've updated the PR accordingly.",
    "That sounds great to me, I'd support that",
    "Fixed in latest diff.",
    "newline :)",
    "Is this being used somewhere?",
    "Fixed this.",
    "Fixed that.",
    "Yup, fixed that.",
    "No, idk how that got added. Deleted it.",
    "Fixed.",
    "Fair enough, I reverted this file.",
    "And this key is new.",
    "I don't think this is necessary.",
    "Sure, I'll do that.",
    "add negative test",
    "good catch. no this should be one line",
    "Good points, thank you! I've updated the PR accordingly.",
    "Fixed in latest diff.",
    "Thanks, fixed",
    "Changes applied Let me know if it looks good now",
    "Sure.",
    "This has been fixed.",
    "Done.  This preserves consistency.",
    "Ok. I can update it this way.",
    "Added",
    "Fixed, thanks!",
    "removed!",
    "Fixed, thanks!",
    "Here and below.",
    "Thanks, should be addressed now",
    "Okay feel free to ignore my comment then",
    "It shouldn't.",
    "Ah, right",
    "Code updated",
    "This is worse",
    "No problem.",
    "Please ignore.",
    "What is this for?",
    "Skipped for now: https://github.com/llvm/llvm-project/commit/d4002b43f517fea0292bf71dccaa3d0f6dd798b9",
    "parameters",
    "Woops, removed!",
    "Good point, removed",
    "You're right, sorry. I've fixed this now.",
    "Thanks, that makes sense. I've renamed this.",
    "Done, apologies for the noise.",
    "This needs to be updated",
    "Same thing with header here",
    "@Moxinilian",
    "I think i have something cleaner let me know in the new pr.",
    "Ah yeah, I read that wrong. Thanks for confirming.",
    "That's a great point and I really appreciate the suggestion. In fact, I wasn't sure how to do it : ) That's now been incorporated.",
    "Yeah that is probably better. Thanks. I updated the patch.",
    "Yeah. That's ok",
    "Awesome. Thank you!",
    "I never noticed this. Thanks!",
    "Ignore that.",
    "Ignore this",
    "if (inserted)",
	  "When would this not be true?",
	  "Does it look good now? Or should I change more?",
	  "So, once it's enabled it can no longer be disabled? Could we send some sort of an event when the setting changes?",
	  "Typo becauase",
	  "Not a bug of this problem:",
	  "The actual lowering for this is:",
	  "source files as well). However, compile time performance will be slow if there are",
	  "Note to self: stopped review here.",
	  "I agree this is the right test update.",
	  "Just checking, was there nothing for 9.1?",
	  "Thanks, i've incorporated both of these comments.",
	  "Yes, it should be renamed as well.",
	  "Yeah its generated. I copied this from the outputed hlsls test cases. I can update the test cases.",
	  "that's really great point, adding another test.",
	  "There are more similar patterns.",
	  "I have a try something like",
	  "This can also be simplified into:",
	  "Hm, is this case possible?",
	  "Thanks. I'll revert this back.",
	  "Yes, it's LEA at line 10.",
	  "Thanks, can you add it to the PR description?",
	  "This line should be part of the previous paragraph.",
	  "Acknowledged.",
	  "ach, beat me to it!",
	  "Yes, this is the implementation of the traits for OpenMPI.",
	  "Dropped, thanks.",
	  "Thanks, weird that clang-format did not catch this one :(",
	  "Right, good point.",
	  "indeed, will add them",
	  "I probably need to update this test to be align 8.",
	  "My bad, missed it!",
	  "Yes, it's already covered at line 874.",
	  "Same as other function",
	  "DEPENDS",
	  "}",
	  "Yeah, looks great.",
	  "Ah yes ok I am with you.",
	  "Yes, we can fix this later.",
	  "Thanks for finding this.",
	  "Can you help me understand this check?",
	  "The code is fine.",
	  "Will do.",
	  "These should be implicit as well.",
	  "Ah, yes! Moved it to an assert.",
	  "same nit from above",
	  "My justification would be the same.",
	  "I think you can combine these two lines into one.",
	  "Oh yeah of course.. Thanks!",
	  "Fair enough",
	  "Corrected",
	  "I like this idea too.",
	  "Don't think this is needed.",
	  "As above",
	  "Oops, will fix and will check for typo.",
	  "Ah that's better.",
	  "Yep, will fix",
	  "Oh right!",
	  "Works for me",
	  "Oops,  it looks like I forgot to push one commit.",
	  "Adjusted, thanks!",
	  "Yeah you're right, not a problem then.",
	  "This can be an assert",
	  "Please could you link me to the source for this? I am having trouble finding it.",
	  "Dropped, thanks!",
	  "Oh, ok.",
	  "Will rename them.",
	  "Yes, it should.",
	  "Didn't get that?",
	  "I'll write another test.",
	  "Ta!",
	  "likewise",
	  "Thanks for the clarification.",
	  "Aligned.",
	  "-------",
	  "Understood, will address.",
	  "What happened to Example 3?",
	  "Oops, thanks for catching this serious error! Checks have now been tightened.",
	  "Looks reasonable to me.",
	  "LGTM either way",
	  "I don't think so.",
	  "Yes, you are right...",
	  "Good spot!",
	  "@erichkeane @AaronBallman",
	  "I missed this, thanks for noticing.",
	  "Ah yep. :/",
	  "expects",
	  "Outlined, thanks!",
	  "insert",
	  "see #102118",
	  "Oh woops, that should be inverted",
	  "Yeah, I missed this. Will fix.",
	  "I see, thanks for the clarification.",
	  "Good catch, DYN is the default FRM value now.",
	  "I agree this is the right test update.",
	  "Yeah, I think it's good that you raised it, especially because I had the exact same back and forth. I'll leave this conversation as unresolved and maybe fmayer has an opinion.Yeah, I think it's good that you raised it, especially because I had the exact same back and forth. I'll leave this conversation as unresolved and maybe fmayer has an opinion.",
	  "Yes and I should note that.",
	  "reduces",
	  "Even better :)",
	  "Hmmm good question",
	  "This logic still applies.",
	  "Ok, but, suppose that someone has written",
	  "Reordered, thanks!",
	  "Not in this patch",
	  "Will do.",
	  "Add a message",
	  "@clayborg",
	  "Yes, that looks good.",
	  "Did you submit it?",
	  "i see. fixing it.",
	  "same in line 52",
	  "Good job.",
	  "Ah, I see :+1:",
	  "Hi Jonathan,",
	  "Change the 12?",
	  "Okay, thanks in advance.",
	  "Maybe?",
	  "OKie!",
	  "I don't think we need that change",
	  "Something like that.",
	  "@jayfoad ping.",
	  "You are really fast.",
	  "Hi Adam,",
	  "Ok, sounds good to me.",
	  "Ok, looks good to me.",
	  "Oh my :)",
	  "As above.",
	  "This is wrong",
	  "Gone, thanks",
     "Thanks for the pointer and explanation!",
	  "{",
	  "Thanks, I will modify it.",
	  "Do you mean something else?",
	  "That sounds reasonable to me.",
	  "static",
	  "This file needs hi tests.",
	  "Thanks, that is indeed the case.",
	  "Got it, thanks.",
	  "This is probably better",
	  "Good catch. Thanks.",
	  "I can live with that :)",
	  "}",
	  "Thanks for your reminding. I have pre-commited the test.",
	  "You are right. This is no longer needed.",
	  "1. Sounds good.",
	  "Why is this necessary?",
	  "Can do ",
	  "could you elaborate on what are those? I don't know what you mean.",
	  "Good point, I'll create a follow-up PR.",
	  "Please merge with previous entry.",
	  "yes that would be fine by me.",
	  "Similar here",
	  "Thanks for the heads-up! :)",
	  "add a new line",
	  "e.g,",
	  "in the same module.",
	  "please do! thanks!",
	  "Indeed. Amended.",
	  "This is #115659.",
	  "Do you insist?",
	  "ok. got it",
	  "True, that.",
	  "Ack, got it.",
	  "Expanded comments.",
	  "should be fine now",
	  "Thanks, I just did that.",
	  "I changed to what you suggested.",
	  "Undone, thanks",
	  "Yes, that makes sense. Thanks for the explanation.",
	  "cheap trick",
	  "untested",
	  "what does this mean?",
	  "Yes, just replaced it.",
	  "Document this",
	  "Thanks for elaborating",
	  "e.g,",
	  "Thanks! Good catch!",
	  "Simplified, thanks!",
	  "Yes, I guess 6 is enough.",
	  "Missed one",
	  "Commented code.",
	  "Right. I will fix it.",
	  "@cor3ntin ^",
	  "Or this.",
	  "Yes, that's the change I proposed.",
	  "?Where is this used",
	  "Also LGTM!",
	  "@Meinersbur",
	  "fix comments",
	  "Ah. Good to know.",
	  "yes, indeed",
	  "So much better ",
	  "I think these aren't used now.",
	  "Missing test.",
	  "update test title",
	  "Ok.I see.",
	  "OK I will test them in a followup path.",
	  "thanks. changed to AnyShaped.",
	  "Implemented in b491cb6.",
	  "Just a drive-by note.",
	  "Yep that looks good to me.",
	  "Addressed all, thanks",
	  "Latest version is 5",
	  "Use input rank instead of `6`",
	  "Thanks for your comments! I will track them later.",
	  "Good catch, yes this should be private.",
	  "unsigned Size;",
	  "Multiple lines",
	  "Yes, technically. I've dropped the NFC tag.",
	  "Ah?  so we still expect the others to get here?",
	  "This code is in desperate need of some comments.",
	  "Hasn't landed yet.",
	  "Changed, thanks!",
	  "80 characters",
	  "R, State, OrigLoop,",
	  "Whoops.",
	  "Ah, I missed this. I was going to discuss removing this argument as I can't find anything that makes use of it.",
	  "Yess.",
	  "Make it fit in a line (80-char)",
	  "Aha, should be a copy-paste mistake.",
	  "I guess yes, if such an instruction existed.",
	  "Yeah it looks OK, they should both be about the same.",
	  "there are four methods listed",
	  "Very cool.. I do the same.",
	  "Add assertion message",
	  "Oh, missed to update.",
	  "See my comments above.",
	  "Thanks for the pointer and explanation!",
	  "This looks like an improvement.",
	  "Thanks for your reply , I understand it. I'll fix my PR follows the v1.0 Spec.",
	  "e.g,",
	  "Ignore me again.",
	  "Thanks for your comments.",
	  "OK we can do without this",
	  "Agreed, I will raise it.",
	  " Make sense to me.",
	  "Hmm...actually, I was wrong. I must have messed up the calculation. I'll try to catch this usage.",
	  "Thanks, the changes have been made.",
	  "Thanks, I will modify it.",
	  "consider",
    "I never do that!",
	  "Shouldn't this be the other way round?",
	  "Does #114916 help?",
	  "definitely",
	  "Are you working on a follow-up PR or what's the plan otherwise?",
	  "Duplicate line",
	  "Fine with me",
	  "Your wish is my command. :-)",
	  "Can that happen or should we assert?",
	  "Thanks for letting me know @mikerice1969! I'll take care of it",
	  "those changes are no longer in this PR.",
	  "I'll try to add it",
	  "Why did this change?",
	  "Seems reasonable to me.",
	  "Thanks.",
	  "Oh well, good enough!",
	  "That looks fine, thanks",
	  "Common problem.",
	  "Good point, renamed",
	  "We don't do this in most of the code.",
	  "Please give me some time to investigate, I'm not very familiar with analyzer.",
	  "Let's discuss there, thanks!",
	  "Thanks @AaronBallman, updates provided.",
	  "Combining these looks great, thanks.",
	  "Implemented, thanks.",
	  "Thanks for the catch",
	  "Okay, I've reverted back to the old form.",
	  "Thanks! I'm lean towards incremental development and progress, so let's proceed and land this and refactor to align.",
	  "Aah. missed to push this change. Thanks.",
	  "Good point, thanks.",
	  "There still only seems to be one commit in this PR",
	  "Thanks, that wasn't my intention.",
	  "@delcypher Thanks! LGTM.",
	  "Thanks!",
	  "Thanks for the ping. Agree with the inconsistency. Will get back to you.",
	  "Thanks.  It's  more accurate and cleaner.",
	  "Thanks! I will have a look at that on Monday then.",
	  "Sounds good, thanks for the explanation of how we're choosing the minimum supported version.",
	  "Yep, sounds reasonable. Thanks.",
	  "Yes, thanks for catching!",
	  "Thanks! Would you be okay if I do this in an (immediate) follow-up?",
	  "Moved, thanks!",
	  "@AaronBallman thanks for the feedback. Do you mean the [following changes](https://github.com/llvm/llvm-project/pull/112081/commits/9c2a745ed365449be45cd062f29c89cabde0f514)?",
	  "I'll try to remember that in the future.",
	  "You're right, thanks. #111347",
	  "Thanks, I will update that, please let me know if there are any other C++ 26 features that I should adopt.",
	  "Right. Thanks.",
	  "hat worked Thanks!",
	  "Oh perfect, thanks!",
	  "Recovered original style. Please help check if you have other questions about this pr, thanks a lot. :-)",
	  "Thanks, I forgot about this while switching between projects",
	  "Thanks for taking a look.",
	  " did a small bit of refactoring based on Sean's comments to reduce the number of ifdefs now, thanks!",
	  "",
	  "Ack, I'll take care of of it. Thanks.",
	  "Thanks. Just in case, is i12**7** a typo or intentional?",
	  "So try to match them?",
	  "Right, thanks.",
	  "Thanks for the catch",
	  "Yep, moved out, thanks!",
	  "Thanks for the catch, and yup I believe so. They should be clearer now that I have full matches. See update.",
	  "Thanks! I documented those are experimental.",
	  "Thanks. Will fix.",
	  "Ah! Much nicer. Thanks. :-)",
	  "Yes, moved to the top as suggested, thanks!",
	  "Thanks! Swapped the order of the cost. Would you mind doing the merge?",
	  "in the same module.",
	  "Really appreciate this block of comments. Paints the picture of what happens clearly. Thanks :)!",
	  "makes sense, thanks @michaelmaitland and @topperc !",
	  "Thanks, this is now addressed in commit a05ae62",
	  "Yeah, I agree that this patch should not fix those dependencies. Thanks for explaining.",
	  "Ah yeah, there are a couple of them left, I forgot to fix them, thanks for noticing it!",
	  "Oh. Thanks I see.",
	  "Ooops! Thanks for spotting that.",
	  "Yep, moved out, thanks!",
	  "Thanks -- will keep the idea of matching once and reusing the result in mind if performance becomes an issue later!",
	  "Ah, okay, didn't realise that, thanks!",
	  "Swapped and documented ,thanks.",
	  "Oh, I didn't know that. Thanks!",
	  "Restored, thanks!",
	  "Thanks, replaced in https://github.com/llvm/llvm-project/pull/126008/commits/d4cb8efac8dc49197623e99229cf3d8f41335bbc",
	  "Makes sense to me. Thanks for the investigation!",
	  "Thanks for explaining. I had misunderstood what these were for.",
	  "You are right. We can use 2 here.",
	  "The line table without your changes was helpful, thanks!",
	  "thanks, is it possible to add a test?",
	  "Thanks for cleaning these up :)",
	  "I will fix that.",
	  "Separate patch is fine.",
	  "Thanks for this info! Will keep these style rules in mind.",
	  "Yep, moved out, thanks!",
	  "Replaced, thanks!",
	  "hat PR looks good to me, thanks!",
	  "Thanks, I didn't notice that.",
	  "It should. Thanks for catching that.",
	  "#110885",
	  "No bad change! Thanks for catching it!",
	  "Okay, I'll change it to that.",
	  "They are needed.",
	  "Thanks, I've rewritten this to be more explicit about the goals and mechanisms in light of our discussion.",
	  "Sounds good, I'll have a look later then. Thanks :)",
	  "Thanks for linking me to this!",
	  "No bad change! Thanks for catching it!",
	  "DEPENDS",
	  "Yep, will look into that separately, thanks",
	  "Okay Thanks I am Working on it",
	  "Yeah, the original one is much better.",
	  "Is it used somewhere?",
	  "Found a better solution.",
	  "Might as well",
	  "Agreed. Thanks for explaining.",
	  "Thanks looks good to me now!",
	  "Oh, thanks for pointing out this. I'll fix it.",
	  "Thanks for the suggestions! I think they improves readability.",
	  "Hi, I think you're right, thanks. I'll have a look.",
	  "Thanks for the suggestions. I modified the checks as suggested.",
	  "Thanks. Virginia is fixing this in her PR, which this PR is based on.",
	  "Thanks, will look into it as follow-up.",
	  "Not needed in the latest version, thanks",
	  "Ok, thanks for clarifying. I will look into this.",
	  "Thanks for all the reviews @frederick-vs-ja! I will look into it soon.",
	  "What's fake about it?",
	  "Thanks for spotting and the revert. Fix is at https://github.com/llvm/llvm-project/pull/121918.",
	  "That's much better, thanks.",
	  "Didn't know that, thanks.",
	  "Thanks for making the update here.",
	  "oh, I see why now. anyway, thanks!",
	  "Indeed, thanks for the catch.",
	  "In this patch might be simpler thanks.",
	  "Yep, thanks for the catch.",
	  "Update to check #of successors, thanks!",
	  "I've put up https://github.com/llvm/llvm-project/pull/95083 to fix this.",
	  "Make sense, thanks.",
	  "Thanks for the catch",
	  "Moved to the end. thanks!",
	  "An example of regression here.",
	  "Thanks for pointing to the coding standards!",
	  "My motivation was to simplifiy the solution, I will check the other way, thanks.",
	  "};",
	  "Ah, that was the intent. Thanks for pointing it out.",
	  "understood, thanks",
	  "Thanks, I'll update this.",
	  "Thanks. Just in case, is i12**7** a typo or intentional?",
	  "Thanks for your contribution, @fschlimb .",
	  "That seems fine, thanks",
	  "Thanks, did this, including moving some of the other recent, related additions.",
	  "Right. Thanks.",
	  "That looks fine, thanks",
	  "Thanks for the ping. Agree with the inconsistency. Will get back to you.",
	  "You are right, thanks!",
	  "Ah I forgot we don't handle loads and stores yet, thanks for submitting that. I don't see any reason why we can't handle them too.",
	  "I'd prefer to leave it for later.",
	  "Sounds good, thanks!",
    "Ah, I read the original wording wrong, I'll drop this sentence entirely.",
	  "Not a huge deal, just tends to be cleaner.",
	  "And now you can delete all of this",
	  "Yes, that would be cool!",
	  "WTF is a dependent BMI?",
	  "uhh I think so? Its hard to give this thing a precise name",
	  "These shouldn't be here.",
	  "Code gone now",
	  "Please document.",
	  "No. This has no relation to spilling.",
	  "Hi.",
	  "SG, I'll move it.",
	  "Ooo interesting.",
	  "OK.",
	  "I guess you dont need this.",
	  "Will need update after #114061",
	  "I guess this piece is gone.",
	  "Either way is fine by me.",
	  "Please fix FIXME",
	  "@DavidTruby I think you missed this when responding to feedback",
	  "Yes please, so we can keep the test as it was.",
	  "right, typo",
	  "",
	  "Yes it is. I guess I can change this to assert.",
	  "Go for it, then.  Downstream usage can adapt if needed.",
	  "I see - yes.",
	  "Can we",
	  "Changed all places.",
	  "Yeah, we should do that.",
	  "RIght, let's leave it as is then.",
	  "}",
	  "Agreed. Don't think we want to maintain this list.",
	  "Meh",
	  "Do you still need these changes?",
	  "Ping @cxy-1993",
	  "Awe, I thought this was clever/useful :)",
	  "Addressed in dbe8d4c.",
	  "we still need",
	  "This todo should probably be in the code :)",
	  "second this.",
	  "Wrong instruction. Fixing real quick.",
	  "Please restore the comments from the left (extending them if necessary).",
	  "I'm using",
	  "I will try to explain in detail why it was needed :)",
	  "This cannot fail",
	  "This is the second part of the fix.",
	  ") {",
	  "Yeah, this looks much better now.",
	  "Please actually generate the test checks...",
	  "happening.",
	  "in the same module.",
	  "N/A anymore.",
	  "Anyway, I changed as you suggested.",
	  "Yeah, we should do that.",
	  "Yes, I prefer that too.",
	  "Yes, working on updating accordingly",
	  "I think that makes sense ",
	  "That was blind copy-and-paste.",
	  "Nope, I don't mind.",
	  "happening.",
	  "Sounds better IMO",
	  "Yes, I think so.",
	  "It's not. I'm gonna fix it today.",
	  "change to match above",
	  "Yes please, so we can keep the test as it was.",
	  "Yes, testing this also in the latest revision.",
	  "If possible, I would like this to be a separate PR.",
	  "Undo this change?",
	  "Good point. I'll rename this function.",
	  "Alright, for the future roadmap",
	  "Why is this needed now?",
	  "Err yeah :)",
	  "Okay, then I agree that it wouldn't be beneficial to do so.",
	  "That's fine then.",
	  "Got it. The check will be in other PR.",
	  "This seems useful",
	  "Yeah, I think so.",
	  "CC @JDevlieghere who might know more.",
	  "Regenerate this file?",
	  "in the same module.",
	  "This is still an issue.",
	  "OK, if it's pre-checked the unreachable before was fine",
	  "Don't need the mattrs",
	  "Don't need the mattrs",
	  "... I'm confused. Why're you setting all the indices to 0?",
	  "Sounds good. I may experiment with that as part of the effort to improve stale matching/continuous mode.",
	  "Yes, I think that's basically it.",
	  "I'll update that in a separate PR.",
	  "Oh, where is the non-vp version? Or does it exist? :-)",
	  "I don't think we can spell that",
	  "I do not think you need to copy:",
	  "Why was this moved here?",
	  "It's copied from above, and that was also unescaped, good catch",
	  "Cleaned up the code. Hopefully better now.",
	  "Yes, separate patch",
	  "yes. clarified.",
	  "#104864",
	  "Just take name?",
	  "I see your point. I will adjust it to only report the debug message and return true.",
	  "Why was this moved here?",
	  "just renaming",
	  "fixed",
	  "Do you need to make the copy if you're not going to delete it?",
	  "Again, not your fault but it's downright confusing!",
	  "This value is discarded.",
	  "yes, that is a good approach. As long as we know that we won't get an error if some bytes were written",
	  "Good catch. I need to change line 61.",
	  "Why no match? I don't see any trouble with",
	  "Made some improvements.",
	  "Will add the extra check",
	  "Copy-paste != fixing existing mistakes :)",
	  "I could but why?",
	  "Ah, I had missed that!",
	  "ok, sounds justified.",
	  "Keep this all as Align?",
	  "Aha I see, this is a fix. Never mind.",
	  "Ah, I read the original wording wrong, I'll drop this sentence entirely.",
	  "Please add test cases that cover possible errors.",
	  "You're right, I've turned this into a check and brought back the debug print from the original code.",
	  "love this formula! so clever :)",
	  "Then drop them completely from the list",
	  "Neat!",
	  "Yes the owning header should be first",
	  "I hate this thing.",
	  "represnent",
	  "For reach?",
	  "@jrtc27",
	  "Let's move that out, too :)",
	  "I don't think this is reachable.",
	  "There's another hard tab here.",
	  "I looked, but couldn't find anI looked, but couldn't find an",
	  "Cool, makes sense! I'll have to give it a go at some point",
	  "Good catch! I will add a guard here!",
	  "Ah, I see. Sounds good.",
	  "Yes I did.",
	  "Why was this deleted?",
	  "Yes, this was a bug.",
	  "And now you can delete all of this",
	  "This is #114867.",
	  "Also adjusted.",
	  "@jrtc27",
	  "Makes sense.",
	  "Yes, please have a look.",
	  "Yes, that's a better name.",
	  "Typo optimised :)",
	  "Always and Leave?",
	  "I believe this can stay",
	  "Yes I agree. I will add it here.",
	  "Yes, I do remember something related. That's why it is just a question. :)",
	  "Actually I think they're all wrong",
	  "No worries.",
    "line 168 can be hoisted out to the outmost loop (i.e line 163)",
	  "No error message will emit here.",
	  "This was painful to update.",
	  "Did you get a chance to look into this?",
	  "# Title",
	  "Noise in the diff?",
	  "Note moved up to the top of the section.",
	  "Same below.",
	  "DEPENDS",
	  "221a65def345",
	  "Have redone the comments throughout to be clearer.",
	  "Yes exactly",
	  "Yes I thought the same thing, will adjust separately.",
	  "Ahh, that's not great.",
	  "P3074 has been accepted!",
	  "why did you delete all these tests?",
	  "In the future please move such changes to separate patches.",
	  "We should have tests for these.",
	  "yes, oops, fixed!",
	  "explained",
	  "Yes, I removed them now.",
	  "@lukel97 Thank you for the comment.",
	  "3b527754bfb3a3e27cd729d15f511608e2f7f367",
	  "Duplicate comment here.",
	  "Why this change?",
	  "This was a left-over from earlier versions, removed, thanks!",
	  "Ah, that explains it. Thanks!Ah, that explains it. Thanks!",
	  "All looks good, thanks!",
	  "Oh thanks for catching that, I guess it doesn't show up with clang. Will rename!",
	  "Thanks for the review and pointers! 2 seems good to me too, I'm happy to give it a stab.",
	  "Updated as suggested thanks!",
	  "No, leftovers from an earlier version of the code. Removed. Thanks!",
	  "Thanks for pointing this out, done",
	  "Thanks, removed.",
	  "Thanks! That is super helpful, I added the comment.",
	  "Changed.",
	  "Thanks, done.",
	  "Yes, the goal is to not crash. But I added a check for the metadata also, for completeness.",
	  "Do we have a test for",
	  "This cost seems way too big",
	  "Good idea, thanks!",
	  "Thanks, this is done in the following commit https://github.com/llvm/llvm-project/pull/101024/commits/56d599c2faeaf36f2076b40e30cb8e9b15a101ca",
	  "Updated thanks!",
	  "i don't get this.",
	  "This is slightly hack. Let's add a new case for it and maybe we need to update the state machine if required.",
	  "more cases. At the moment, for the following loop nest, even though both loops are",
	  "Added in the latest version, thanks!",
	  "Thanks for the updates - this looks good to me now!",
	  "Good point, it's fixed now.",
	  "Thanks. Done.",
	  "Yep, good suggestion. Thanks!",
	  "const?",
	  "Ack, thanks.",
	  "Make sense, leave it as is then.",
	  "unneeded thanks to llvm/test/MC/Mips/lit.local.cfg",
	  "That's a mistake on my part. Thanks for spotting",
	  "Would we be able to remove this entirely?",
	  "as well as expected",
	  "Yep, better.",
	  "@madhur13490  Thanks for your comment.",
	  "Fixed, thanks, see 2b12acbde48f534e725a1febf1607178266bb3b1",
	  "typically",
	  "See comment regarding similar usage above.",
	  "yes they are, my bad.",
	  "I think that is ok.",
	  "Right! Good idea.",
	  "Please add a negative test",
	  "I think that is ok.",
	  "Hmmm I don't think I change anything here. Not sure why there is a diff",
	  "Thanks for this!",
	  "How is this related to the PR?",
	  "How did you arrive at this algorithm?",
	  "I didn't :) Completely forgot to run clang-format...",
	  "Do you mean the following?",
	  "No, will remove, thanks",
	  "Ah, good spot!",
	  "This is a good comment. Let's change this in another patch. Thanks.",
	  "Done! I have just pushed an updated patch, so it's ready to be merged if there are no more comments.",
	  "Ahh sorry about that. Thanks for clarifying",
	  "Updated, thanks!",
	  "Good point, done.",
	  "Yea, this makes sense to harmonize. I'll try to come back to this one later, or write a good first issue for cleaning this up.",
	  "manager",
	  "DOCUMENTME :)",
	  "It does!",
	  "these are unused",
	  "Deleted explicit output specification in 78cf14fa66fd9817a63537d37f0bc2078967a08d, thanks. Also applied to #113817",
	  "Thanks for the quick review!",
	  "I agree, this is definitely broken.",
	  "this also sets the debug info where it didn't set it before which is good to fix as well, thanks.",
	  "Done. Thanks. I checked that the rendered html looked ok.",
	  "Thanks. I forgot we had that. Its much nicer.",
	  "Please drop trivial braces here and below.",
	  "Ah got it. Sorry about that. Thanks for the suggested change",
	  "@ojhunt",
	  "Thanks, Digger. I have added this at the end of the test case.",
	  "That's quite interesting case. Will add your example to negatives. Thanks",
	  "Thanks for your comment, a new commit has been added.",
	  "This sounds good to me, thank you!",
	  "TODO: Fix",
	  "Oh, thatâ€™s very true. Thanks for the clarification!",
	  "Thanks for the link. I'll try to catch up on the updates ",
	  "Done in 740f05545150fb01cfca8c16da50c956b4f30959, thanks!",
	  "I removed this test case for now. Thanks for pointing this out.",
	  "Fixed by https://github.com/llvm/llvm-project/pull/115677",
	  "I fixed this in 528bcf3a55ca520c31c77ed5fbacf09bff8f39ec",
	  "(And thanks for the extended test case!)",
	  "Very well, perhaps worth leaving a TODO.",
	  "Thanks for the suggestion. This is a feature I was not aware of in Python.",
	  "Thanks for checking.",
	  "Hi Ivan. Thanks for pointing this out. I will create a follow up PR to clean up and remove this duplication",
	  "Oh okay. I understand. Thanks for this! I've addressed it - please take a look.",
	  "Okay, this seems like a code smell to me, but it's reasonable enough. Thanks!",
	  "is this needed?",
	  "Thanks, done in [`@find_first_of_i8_multi_exit`](https://github.com/llvm/llvm-project/pull/101976/commits/6d1755189549f3f6dd804d98810cbc374cd087a8#diff-f256205074dbd8200178875fe608f7daf7a0871a9e4bea54d8215524588aca76R325).",
	  "remaining",
	  "I think I like that much better, yes. Thanks!",
	  "Thanks, that is a good idea!",
	  "done in latest commit, thx",
	  "thx",
	  "Thanks, have moved this into a helper function :)",
	  "I need to update these comments.",
	  "removed and cleaned all",
	  "Yes, that's a bugfix.",
    "removed justification",
	  "Thanks for pointing that out! I was not aware of that appraoch.",
	  "Can avoid reaching here?",
	  "yes",
	  "Yes",
	  "No",
	  "no",
	  "Fixed",
	  "ah",
	  "oh",
	  "ok",
	  "OK",
	  "Ok",
	  "Ah",
	  "Done",
	  "done",
	  "Done.",
	  "done.",
	  "good",
	  "Good",
	  "neat",
	  "Neat",
	  "missed",
	  "Missed",
	  "Nope",
	  "nope",
	  "Yeah",
	  "yeah",
	  "anyway",
	  "Anyway",
	  "Anyways",
	  "anyways",
	  "Ping",
	  "ping",
	  "right",
	  "please",
	  "Please",
	  "looks",
	  "Looks",
	  "follow",
	  "PR",
	  "pr",
	  "Pr",
	  "catching",
	  "working",
	  "Oh",
	  "sense",
	  "Sense",
	  "sound",
	  "sounds",
	  "bad",
	  "Bad",
	  "good.",
	  "Good.",
	  "thx",
	  "todo",
	  "ToDo",
	  "TODO",
    "That's weird.",
	  "Updated to named values.",
	  "ditto. Leave below unchanged",
	  "ditto",
	  "ditto, the same below.",
	  "Removed and updated.",
	  "updated",
	  "Removed",
	  "Why does this need moving?",
	  "Hi, Matt, I have updated it.",
	  "updated",
	  "wrong",
	  "works",
	  "Hi",
	  "hi",
	  "Ditto about adding comment",
	  "Made the comment very much more specific",
	  "This is a very clever way of capturing what's going! Well done and thank you",
	  "Well",
	  "better",
	  "FIXME",
	  "Oops, that was a testing message I left in. I've deleted it now.",
	  "copy",
	  "addressed",
	  "description",
	  "read",
	  "Thank you for explanation!",
	  "ditto above.  cheap type (2 words)",
	  "ditto, I think this is also doable and will address it in the follow-up PR.",
	  "That is what happens now.",
	  "look",
	  "This is already stated above.",
	  "already",
	  ":D",
	  "I'd prefer having this explicit.",
	  "Sorry, that's some private note for myself and which has been done.",
	  "Do we need to do that?",
	  "we",
	  "Same comments here",
	  "comments",
	  "Ditto. there must be a better-named function for this",
	  "Not here",
	  "Not",
	  "Moved to header.Moved to header.",
	  "yep, this case actually happens a lot in our downstream projects.   I planed to handle it in a follow-up patch: https://github.com/llvm/llvm-project/pull/105383",
	  "understood",
	  "I am not sure I understood this, sorry.",
	  "Check these first?",
	  "Check",
	  "agree",
	  "I agree and have made the change",
	  "done, moved after line 108.",
	  "line",
	  "Adopted where applicable.",
	  "It is not only C++, but also works in C I think?",
	  "C++",
	  "C",
	  "Also here -- could you re-indent?",
	  "Could please add some comments?",
	  "typo",
	  "Addressed",
	  "nevermind, you caught this already.",
	  "Dead code?",
	  "ditto, the same below.",
	  "Forgot",
	  "I don't think we have one.",
	  ":(",
	  ":)",
	  "itto for [LWG3862](https://cplusplus.github.io/LWG/issue3862):",
	  "(ditto, here and below)",
	  "Thanks a lot for the explanations and clarifications.",
	  "Ditto for [LWG3948](https://cplusplus.github.io/LWG/issue3948) (assuming the #99915 will be merged first)",
	  "Nice types.",
	  "Nice",
	  "point",
	  "Ditto for [LWG3769](https://cplusplus.github.io/LWG/issue3769):",
	  "Great",
	  "catch",
	  "Is this change desirable.",
	  "change",
	  "Well, it is right, but I think that this approach is even better.",
	  "better",
	  "75b5ab27a41f",
	  "You don't need that anymore",
	  "You",
	  "Thanks",
	  "Same as above",
	  "Same",
	  "fine",
	  "I think it's fine",
	  "do.",
	  "Will do.",
	  "ditto about code style",
	  "duplicate",
	  "Ditto. It can be filled with a calculated value when it's omitted.",
	  "@arsenm Here.",
	  "@arsenm",
	  "Copy paste comment",
	  "Ok, I moved the code to the `include/cmath` header (see 94435bec53e4b1e54d948869cb6ba15012e4570f).",
	  "It should work, what's the error you got?",
	  "error",
	  "yea that was an error in my logic",
	  "Yeah fair enough, just this case is not relaxing the constraint, its tightening it.",
	  "logic",
	  "Indeed",
	  "Nvm",
	  "Nvm.",
	  "Nvm. Removed this logic.",
	  "rid",
	  "Deleted",
	  "Deleted.",
	  "Yep",
	  "Commuted tests?",
    "Add newline",
	  "Yeah, that does sound like a problem.",
	  "Yeah,",
	  "problem",
	  "problem.",
	  "Most cases are simply grouped.",
	  "cases",
	  "Thank you @CarolineConcatto for reviews. I have updated patch. Could you please review again?",
	  "I see.",
	  "Thanks! I blindly copied existing code however should've reread it.",
	  "Sorry for the high latency!",
	  "Sorry",
	  "sorry",
	  "Thanks, I think I understand where the confusion is coming from. Correct me if I'm wrong ...",
	  "thank you Martin! for the detailed explanation. i concur with you and Julian now",
	  "added tests for v4i16, v4f16, v4bf16, v2bf16",
	  "I'll add them here.",
	  "I'll",
	  "DEPENDS",
	  "Actually it caught some, though I haven't looked into all:",
	  "I took some advice from this change and reworded this paragraph. Thank you!",
	  "this isn't needed",
	  "needed",
	  "helpful",
	  "helpful.",
	  "I think they're helpful.",
	  "I",
	  "sorry, this was in some internal non-public bots. yes that commit fixes this, thanks for the pointer",
	  "ACK",
	  "ACK.",
	  "Yes, I forgot to remove this when I fixed the tests. Thanks for finding it.",
	  "finding",
	  "5dac5006c692",
	  "ok, I thought of this too. I just wanted to make sure before choosing a way. Thanks Alexey.",
	  "Makes sense, thanks! I've made a few suggestion for additional comments ^^^.",
	  "note",
	  " Added release note.",
	  "release",
	  "Docstring here.",
	  "Hi Jonathan,",
	  "Accident?",
	  "Does this LGTY?",
	  "Does",
	  "LGTY",
	  "LGTY?",
	  "helpful",
	  "veryvery",
	  "comment",
	  "Thanks,",
	  "Thanks, I added a comment to the function.",
	  "Thanks for the comment, I'll look to expand this test with your suggestions.",
	  "Okay",
	  "Okay,",
	  "okay",
	  "okay,",
	  "This was just moved too.",
	  "This",
	  "moved",
	  ")",
	  "too",
	  "Here",
	  "Here too.",
	  "indeed",
	  "indeed",
	  "beneficial",
	  "Thanks for this suggestion! It would be very beneficial indeed.",
	  "Thanks, fixed in https://github.com/steakhal/llvm-project/commit/3b2d3231eb29dddf8f024c6dee0f5d8ce1b1d261.",
	  "feedback",
	  "feedback!",
	  "We don't have a story for debug info yet :(",
	  "Got",
	  "it",
	  "Got it, changed.",
	  "changed",
	  "changed.",
	  "correct.",
	  "test",
	  "Indeed",
	  "Indeed,",
	  "Indeed, thank you for reporting this.",
	  "reporting",
	  "Incorrect file name",
      "Nice",
      "catch!",
      "Thanks",
      "Thank",
      "Nice catch! Thank you!",
      "I see. Thanks."
      "I don't understand the code with the change",
      "Thanks for making the update here.",
      "Debugging...",
      "Debugging",
      "Thanks for the reply!",
      "Updated, thanks!",
      "Looks better to me.",
      "me.",
      "me",
      "oversight",
      "adjust",
      "Thanks for filing the issue.",
      "Will adjust separately.",
      "sure, sounds good.",
      "Oh my...",

]

# (Optional) For patterns where you want to drop any comment containing the token up to a certain length,
# populate SHORT_MAX_LEN with normalized pattern -> max length.
# e.g. SHORT_MAX_LEN = { "thanks": 20, "fixed": 8 }
SHORT_MAX_LEN: Dict[str, int] = {"thanks": 59, "fixed": 35, "Thanks": 59, "yes": 59, "Yes": 59, "No": 59, "no":59, "Fixed": 59, "ah": 59, "oh": 59, "ok": 59, "OK": 59, "Ok": 59, "Ah": 59, "Done": 59, "done": 59, "good": 59, "Good": 59, "neat": 59, "Neat": 59, "missed": 59, "Missed": 59, "Nope": 59, "nope": 59, "Yeah": 59, "yeah": 59, "anyway": 59, "Anyway": 59, "Anyways": 59, "anyways": 59, "Ping": 59, "ping": 59, "right": 59, "please": 59, "Please": 59, "looks": 59, "Looks": 59, "follow": 59, "PR": 59, "pr": 59, "Pr": 59, "catching": 59, "working": 59, "Oh": 59, "sense": 59, "Sense": 59, "sound": 59, "sounds": 59, "bad": 59, "Bad": 59, "good.": 59, "Good.": 59, "thx": 59, "todo": 59, "ToDo": 59, "TODO": 59, "Done.": 59, "done.": 59, "apologies": 59, "I": 59, "weird": 59, "ditto": 35, "done": 59, "updated": 59, "Removed": 59, "wrong": 59, "works": 59, "Hi": 59, "hi": 59, "comment": 59, "Well": 59, "better": 59, "FIXME": 59, "Oops": 59, "copy": 59, "addressed": 59, "description": 59, "read": 59, "Thank": 59, "happens": 59, "look": 59, "already": 59, ":D": 59, "Sorry": 59, "we": 59, "comments": 59, "Not": 59, "understood": 59, "Check": 59, "agree": 59, "line": 59, "C++": 59, "C": 59, "typo": 59, "Addressed": 59, "Dead code": 59, "Forgot": 59, ":(": 59, ":)": 59, "Nice": 59, "point": 59, "Great": 59, "catch": 59, "change": 59, "better": 59, "You": 59, "Same": 59, "fine": 59, "do": 59, "do.": 59, "duplicate": 59, "@arsenm": 59, "error": 59, "logic": 59, "Indeed": 59, "Nvm": 59, "Nvm.": 59, "rid": 59, "Deleted": 59, "Deleted.": 59, "done": 59, "Yep": 59, "newline": 59, "Yeah,": 59, "problem": 59, "problem.": 59, "cases": 59, "sorry": 59, "I'll": 59, "DEPENDS": 59, "needed": 59, "helpful": 59, "helpful.": 59, "I": 59, "ACK": 59, "ACK.": 59, "finding": 59, "Accident?": 59, "Does.": 59, "release": 59, "LGTY": 59, "LGTY?": 59, "helpful": 59, "very": 59, "comment": 59, "Thanks,": 59, "Okay": 59, "Okay,": 59, "okay,": 59, "okay,": 59, "This": 59, "moved": 59, "too": 59, "Here": 59, "indeed": 59, "indeed.": 59, "beneficial": 59, "feedback": 59, "feedback!": 59, "Got": 59, "it": 59, "changed": 59, "changed.": 59, "correct.": 59, "correct": 59, "test": 59, "Indeed": 59, "Indeed,": 59, "reporting": 59, "Nice": 59, "catch!": 59, "Debugging": 59, "me.": 59, "me": 59, "adjust": 59, "oversight: 59"}

# Fuzzy thresholds
FUZZY_THRESHOLD = 92  # strict-mode similarity for long comments
TYPO_THRESHOLD  = 80  # token-set similarity for typo-mode

# -------------------------------------------------------------------
# 1) Trivial-comment detection
_TRIVIAL_PATTERNS = [
    r"^\s*(?:lgtm|ship it|\+1)[.!]*$",
    r"^\s*(?:thanks?|thank you)[.!]*$",
]
_TRIVIAL_RE = [re.compile(p, re.I) for p in _TRIVIAL_PATTERNS]

def is_trivial(text: str) -> bool:
    txt = (text or "").strip()
    if len(txt) < 5 or not re.search(r"[A-Za-z0-9]", txt):
        return True
    for pat in _TRIVIAL_RE:
        if pat.match(txt):
            return True
    return False

# -------------------------------------------------------------------
# 2) Generic-comment detection via enhanced dual-threshold

def normalize(s: str) -> str:
    return re.sub(r"\W+", " ", s).strip().lower()

# pre-normalize patterns
GENERIC_NORMS = [normalize(p) for p in GENERIC_EXAMPLES]

# optional normalized keys for SHORT_MAX_LEN
SHORT_MAX_LEN = { normalize(k): v for k, v in SHORT_MAX_LEN.items() }

def is_generic(comment: str) -> bool:
    c = normalize(comment)
    for pat in GENERIC_NORMS:
        # (0) pure-presence drop
        maxlen = SHORT_MAX_LEN.get(pat)
        if maxlen and pat in c.split() and len(c) <= maxlen:
            return True

        # (1) exact match
        if c == pat:
            return True

        # prepare fuzzy scores + delta
        score_ratio     = fuzz.ratio(c, pat)
        score_token_set = fuzz.token_set_ratio(c, pat)
        delta = max(2, min(4, int(len(pat) * 0.2)))

        # (2) typo-mode for short comments only
        if abs(len(c) - len(pat)) <= delta:
            # token-level single-word typo
            for tok in c.split():
                if fuzz.ratio(tok, pat) >= TYPO_THRESHOLD:
                    return True
            # fallback to token-set fuzzy on the whole comment
            if score_token_set >= TYPO_THRESHOLD:
                return True

        # (3) strict-mode for longer comments
        if len(c) > len(pat) + delta and score_ratio >= FUZZY_THRESHOLD:
            return True

    return False


# -------------------------------------------------------------------
# 3) Sliding-window for long diffs

def sliding_windows(diff: str) -> List[str]:
    tokens = diff.split()
    if len(tokens) <= WINDOW_SIZE:
        return [" ".join(tokens)]
    windows: List[str] = []
    step = WINDOW_SIZE - OVERLAP
    for start in range(0, len(tokens), step):
        windows.append(" ".join(tokens[start:start+WINDOW_SIZE]))
        if start + WINDOW_SIZE >= len(tokens):
            break
    return windows

# -------------------------------------------------------------------
# 4) Build positives from a record

def make_positives(rec: dict) -> List[Tuple[int, str, str, str, str]]:
    positives: List[Tuple[int, str, str, str, str]] = []
    pr        = str(rec.get("pr_number", ""))
    fn        = rec.get("filename", "")
    labels    = rec.get("labels", "")
    diff_txt  = (rec.get("diff_text", "") or "").strip()
    sugg      = (rec.get("suggestion_text", "") or "").strip()
    comm      = (rec.get("comment_text", "") or "").strip()
    commenter = rec.get("commenter", "")

    if not diff_txt:
        return positives

    prefix = f"[FILE]{fn} [LABEL]{labels} "
    for win in sliding_windows(diff_txt):
        diff_win = prefix + win
        # suggestion positives (always kept)
        if sugg:
            for _ in range(SUGG_OVERSAMPLE):
                positives.append((1, pr, commenter, diff_win, sugg))
        # comment positives (filtered)
        if comm and comm != sugg and not is_trivial(comm) and not is_generic(comm):
            positives.append((1, pr, commenter, diff_win, comm))
    return positives

# -------------------------------------------------------------------
# 5) Sample negatives

def sample_negatives(positives: List[Tuple[int, str, str, str, str]]) -> List[Tuple[int, str, str, str, str]]:
    from tqdm import tqdm
    negatives: List[Tuple[int, str, str, str, str]] = []
    idxs = list(range(len(positives)))
    for i in tqdm(idxs, desc="Sampling negatives"):
        _, pr_i, _, diff_i, _ = positives[i]
        while True:
            j = random.choice(idxs)
            if j != i and positives[j][1] != pr_i:
                break
        _, pr_j, commenter_j, _, text_j = positives[j]
        negatives.append((0, pr_i, commenter_j, diff_i, text_j))
    return negatives

# -------------------------------------------------------------------
# 6) Write TSV

def write_tsv(exs: List[Tuple[int, str, str, str, str]], filename: str) -> None:
    os.makedirs(OUTPUT_DIR, exist_ok=True)
    path = os.path.join(OUTPUT_DIR, filename)
    with open(path, "w", encoding="utf-8") as out:
        for label, prnum, commenter, diffa, commb in exs:
            d = diffa.replace("\n", " ")
            c = commb.replace("\n", " ")
            out.write(f"{label}{CODESPLIT}{prnum}{CODESPLIT}{commenter}{CODESPLIT}{d}{CODESPLIT}{c}\n")

# -------------------------------------------------------------------
def main():
    random.seed(SEED)
    # Load records
    with open(DATA_FILE, "r", encoding="utf-8") as f:
        records = json.load(f)
    print(f"Scanning JSON records: {len(records)} items")
    # Build positives
    positives: List[Tuple[int, str, str, str, str]] = []
    for rec in tqdm(records, desc="Creating positives"):
        positives.extend(make_positives(rec))
    print(f"> Created {len(positives)} positive examples")
    # Sample negatives
    negatives = sample_negatives(positives)
    print(f"> Created {len(negatives)} negative examples")
    # Shuffle and split
    all_ex = positives + negatives
    random.shuffle(all_ex)
    n_total = len(all_ex)
    n_train = int(n_total * TRAIN_RATIO)
    n_dev   = int(n_total * DEV_RATIO)
    train_set = all_ex[:n_train]
    dev_set   = all_ex[n_train:n_train+n_dev]
    test_set  = all_ex[n_train+n_dev:]
    print(f"> Train/dev/test counts: {len(train_set)}/{len(dev_set)}/{len(test_set)}")
    # Write TSVs
    write_tsv(train_set, "train.tsv")
    write_tsv(dev_set,   "dev.tsv")
    write_tsv(test_set,  "test.tsv")
    print("âœ” process_data_pr.py complete â€” train/dev/test ready for run_classifier.py")

if __name__ == "__main__":
    main()
